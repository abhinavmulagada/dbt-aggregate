INSERT INTO `celo-testnet-production.blockscout_data.rpl_celo_epoch_rewards` (
    id,
    block_hash,
    block_number,
    epoch_number,
    validator_target_epoch_rewards,
    voter_target_epoch_rewards,
    community_target_epoch_rewards,
    carbon_offsetting_target_epoch_rewards,
    target_total_supply,
    rewards_multiplier,
    rewards_multiplier_max,
    rewards_multiplier_under,
    rewards_multiplier_over,
    target_voting_yield,
    target_voting_yield_max,
    target_voting_yield_adjustment_factor,
    target_voting_fraction,
    voting_fraction,
    total_locked_gold,
    total_non_voting,
    total_votes,
    electable_validators_max,
    reserve_gold_balance,
    gold_total_supply,
    stable_usd_total_supply,
    inserted_at,
    updated_at
)
SELECT
    id,
    block_hash,
    block_number,
    epoch_number,
    CAST(validator_target_epoch_rewards as FLOAT64) AS validator_target_epoch_rewards,
    CAST(voter_target_epoch_rewards as FLOAT64) AS voter_target_epoch_rewards,
    CAST(community_target_epoch_rewards as FLOAT64) AS community_target_epoch_rewards,
    CAST(carbon_offsetting_target_epoch_rewards as FLOAT64) AS carbon_offsetting_target_epoch_rewards,
    CAST(target_total_supply as FLOAT64) AS target_total_supply,
    CAST(rewards_multiplier as FLOAT64) AS rewards_multiplier,
    CAST(rewards_multiplier_max as FLOAT64) AS rewards_multiplier_max,
    CAST(rewards_multiplier_under as FLOAT64) AS rewards_multiplier_under,
    CAST(rewards_multiplier_over as FLOAT64) AS rewards_multiplier_over,
    CAST(target_voting_yield as FLOAT64) AS target_voting_yield,
    CAST(target_voting_yield_max as FLOAT64) AS target_voting_yield_max,
    CAST(target_voting_yield_adjustment_factor as FLOAT64) AS target_voting_yield_adjustment_factor,
    CAST(target_voting_fraction as FLOAT64) AS target_voting_fraction,
    CAST(voting_fraction as FLOAT64) AS voting_fraction,
    CAST(total_locked_gold as FLOAT64) AS total_locked_gold,
    CAST(total_non_voting as FLOAT64) AS total_non_voting,
    CAST(total_votes as FLOAT64) AS total_votes,
    electable_validators_max,
    CAST(reserve_gold_balance as FLOAT64) AS reserve_gold_balance,
    CAST(gold_total_supply as FLOAT64) AS gold_total_supply,
    CAST(stable_usd_total_supply as FLOAT64) AS stable_usd_total_supply,
    TIMESTAMP(inserted_at) AS inserted_at,
    TIMESTAMP(updated_at) AS updated_at
FROM EXTERNAL_QUERY(
    'us-west1.blockscout-rc13-replica-2',
    '''
    SELECT 
        id,
        CONCAT('0x', ENCODE(block_hash, 'hex')) as block_hash,
        block_number,
        epoch_number,
        validator_target_epoch_rewards::text,
        voter_target_epoch_rewards::text,
        community_target_epoch_rewards::text,
        carbon_offsetting_target_epoch_rewards::text,
        target_total_supply::text,
        rewards_multiplier::text,
        rewards_multiplier_max::text,
        rewards_multiplier_under::text,
        rewards_multiplier_over::text,
        target_voting_yield::text,
        target_voting_yield_max::text,
        target_voting_yield_adjustment_factor::text,
        target_voting_fraction::text,
        voting_fraction::text,
        total_locked_gold::text,
        total_non_voting::text,
        total_votes::text,
        electable_validators_max,
        reserve_gold_balance::text,
        gold_total_supply::text,
        stable_usd_total_supply::text,
        inserted_at::text,
        updated_at
    FROM celo_epoch_rewards
    '''
) WHERE epoch_number > (
    SELECT IFNULL(CAST(MAX(epoch_number) AS INT64), 0) AS last_epoch 
    FROM `celo-testnet-production.blockscout_data.rpl_celo_epoch_rewards`
);